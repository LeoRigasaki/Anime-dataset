name: Daily Anime Data Update
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write
  issues: write

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Set current date
        run: |
          echo "CURRENT_DATE=$(date -u +'%Y%m%d')" >> $GITHUB_ENV
          echo "Using UTC date: ${{ env.CURRENT_DATE }}"
      
      - name: Ensure directories exist
        run: |
          mkdir -p data/raw
          echo "Created data directory structure:"
          ls -la data/
      
      - name: Run data collection
        id: update_attempt
        env:
          MAL_CLIENT_ID: ${{ secrets.MAL_CLIENT_ID }}
        run: |
          echo "Starting data collection..."
          python -u src/mal_api.py
          echo "Running check missing..."
          python -u src/check_missing.py
      
      - name: Debug After Collection
        run: |
          echo "Current date is: ${{ env.CURRENT_DATE }}"
          echo "Looking for file: data/raw/anime_seasonal_${{ env.CURRENT_DATE }}.csv"
          echo "Files in data/raw:"
          ls -la data/raw/
          echo "Content of data/raw directory:"
          for f in data/raw/*.csv; do
            echo "=== $f ==="
            wc -l "$f" || echo "Cannot read file"
          done
      
      - name: Verify file creation
        id: verify_file
        run: |
          expected_file="data/raw/anime_seasonal_${{ env.CURRENT_DATE }}.csv"
          echo "Looking for file: $expected_file"
          
          if [ -f "$expected_file" ]; then
            file_size=$(stat -f%z "$expected_file" 2>/dev/null || stat -c%s "$expected_file")
            echo "File exists with size: $file_size bytes"
            if [ "$file_size" -gt 0 ]; then
              echo "status=changed" >> $GITHUB_OUTPUT
              echo "Valid file detected"
            else
              echo "status=unchanged" >> $GITHUB_OUTPUT
              echo "Error: File exists but is empty"
            fi
          else
            echo "status=unchanged" >> $GITHUB_OUTPUT
            echo "Error: Expected file not found"
            echo "Contents of data/raw:"
            ls -la data/raw/
          fi
      
      - name: Commit Changes
        if: steps.verify_file.outputs.status == 'changed'
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          
          file_to_commit="data/raw/anime_seasonal_${{ env.CURRENT_DATE }}.csv"
          echo "Committing file: $file_to_commit"
          
          git add "$file_to_commit" data/missing_data_report.txt
          git commit -m "data: Update anime data for $(date +'%Y-%m-%d')"
          git push origin ${GITHUB_REF#refs/heads/}

      - name: Create Issue on Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Data Update Failed',
              body: `The anime data update workflow failed on ${new Date().toISOString()}\n\nPlease check the [workflow logs](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for more details.`
            })